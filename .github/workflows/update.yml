# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on: push

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  deployToAzure:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v2
        
      # Initialize jitterbit
      - name: Get changed files
        uses: jitterbit/get-changed-files@v1
        id: files
        
      # Print changed files (this is a test)
      - name: Printing
        run: |
          echo "All:"
          echo "${{ steps.files.outputs.all }}"
      
      # Login to Azure
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      # Check modified files and update rules
      - name: Update modified rules
        env:
            RG_NAME: "ms-lab-rg"
            WK_NAME: "ms-lab-la"
        uses: azure/CLI@v1
        with:
          azcliversion: 2.24.2
          inlineScript: |
            for changed_file in ${{ steps.files.outputs.modified }}; do
              if [[ $changed_file = *analytics/* ]]
              then
                az deployment group create --resource-group ${{ env.RG_NAME }} --template-file ${changed_file} --parameters workspaceName=${{ env.WK_NAME }} --verbose
              fi
            done
          # Check modified files and update rules
          
      - name: Remove old rules
        env:
            RG_NAME: "ms-lab-rg"
            WK_NAME: "ms-lab-la"
        uses: azure/CLI@v1
        with:
          azcliversion: 2.24.2
          inlineScript: |
            for removed_file in ${{ steps.files.outputs.removed }}; do
              if [[ $removed_file = *analytics/* ]]
              then
                content = `cat ${removed_file}`
                content="${content//'%'/'%25'}"
                content="${content//$'\n'/'%0A'}"
                content="${content//$'\r'/'%0D'}"
                echo "::set-output name=jsonRule::$content"
                id = fromJson(content).
                az deployment group create --resource-group ${{ env.RG_NAME }} --template-file ${removed_file} --parameters workspaceName=${{ env.WK_NAME }} --verbose
              fi
            done
