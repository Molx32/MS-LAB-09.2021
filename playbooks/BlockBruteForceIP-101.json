{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "p_workflow_name": {
            "defaultValue": "BlockBruteForceIP-101",
            "type": "string"
        }
    },
    "variables": {
        "connection_name": "sentinel-poc-soc",
        "clientId": "d617bc99-1c11-454d-ab6d-1a7abc69bc13",
        "clientSecret": "3388f-XO.obmvKw~dz5PQ-rBfP383FrHV~",
        "tenantId": "a63c8ef2-c3d2-4df0-be32-e15159f96f69",
        "grantType" : "client_credentials"

    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('connection_name')]",
            "location": "[resourcegroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('connection_name')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/westeurope/managedApis/azuresentinel')]"
                },
                "parameterValues": {
                    "token:clientId": "[variables('clientId')]",
                    "token:clientSecret": "[variables('clientSecret')]",
                    "token:TenantId": "[variables('tenantId')]",
                    "token:grantType": "[variables('grantType')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('p_workflow_name')]",
            "location": "westeurope",
            "tags": {
                "LogicAppsCategory": "security",
                "client": "Accord",
                "costcenter": "FR",
                "environment": "prod",
                "projectcode": "SOC"
            },
            "dependsOn": [
                "[concat('Microsoft.Web/connections/', variables('connection_name'))]"
            ],
            "properties": {
                "state": "Enabled",
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections/', variables('connection_name'))]",
                                "connectionName": "variables('connection_name')",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/westeurope/managedApis/azuresentinel')]"
                            }
                        }
                    }
                },
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_a_response_to_an_Azure_Sentinel_alert_is_triggered": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path": "/subscribe"
                            }
                        }
                    },
                    "actions": {
                        "Alert_-_Get_incident": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/Incidents/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/alerts/@{encodeURIComponent(triggerBody()?['SystemAlertId'])}"
                            }
                        },
                        "Entities_-_Get_Hosts": {
                            "runAfter": {
                                "For_each": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@triggerBody()?['Entities']",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/entities/host"
                            }
                        },
                        "Entities_-_Get_IPs": {
                            "runAfter": {
                                "Initialize_NSG_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@triggerBody()?['Entities']",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/entities/ip"
                            }
                        },
                        "For_each": {
                            "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
                            "actions": {
                                "Append_to_array_variable": {
                                    "runAfter": {
                                        "Parse_JSON_2": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "AppendToArrayVariable",
                                    "inputs": {
                                        "name": "IPs",
                                        "value": "@body('Parse_JSON_2')?['Address']"
                                    }
                                },
                                "Parse_JSON_2": {
                                    "runAfter": {},
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@items('For_each')",
                                        "schema": {
                                            "properties": {
                                                "$id": {
                                                    "type": "string"
                                                },
                                                "Address": {
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_each_entity": {
                            "foreach": "@triggerBody()?['Entities']",
                            "actions": {
                                "Condition": {
                                    "actions": {
                                        "Get_Azure_VM": {
                                            "runAfter": {},
                                            "type": "Http",
                                            "inputs": {
                                                "authentication": {
                                                    "audience": "https://management.azure.com/",
                                                    "clientId": "[variables('clientId')]",
                                                    "secret": "[variables('clientSecret')]",
                                                    "tenant": "[variables('tenantId')]",
                                                    "type": "ActiveDirectoryOAuth"
                                                },
                                                "method": "GET",
                                                "uri": "https://management.azure.com/@{body('Parse_an_entity')?['ResourceId']}/?api-version=2019-12-01"
                                            }
                                        },
                                        "Get_VM_NIC": {
                                            "runAfter": {
                                                "Set_variable": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Http",
                                            "inputs": {
                                                "authentication": {
                                                    "audience": "https://management.azure.com/",
                                                    "clientId": "[variables('clientId')]",
                                                    "secret": "[variables('clientSecret')]",
                                                    "tenant": "[variables('tenantId')]",
                                                    "type": "ActiveDirectoryOAuth"
                                                },
                                                "method": "GET",
                                                "uri": "https://management.azure.com/@{variables('NIC')}?api-version=2020-05-01"
                                            }
                                        },
                                        "HTTP": {
                                            "runAfter": {
                                                "Set_NSG_ID": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Http",
                                            "inputs": {
                                                "authentication": {
                                                    "audience": "https://management.azure.com/",
                                                    "clientId": "[variables('clientId')]",
                                                    "secret": "[variables('clientSecret')]",
                                                    "tenant": "[variables('tenantId')]",
                                                    "type": "ActiveDirectoryOAuth"
                                                },
                                                "body": {
                                                    "properties": {
                                                        "access": "Deny",
                                                        "destinationAddressPrefix": "*",
                                                        "destinationPortRange": "*",
                                                        "direction": "Inbound",
                                                        "priority": 101,
                                                        "protocol": "*",
                                                        "sourceAddressPrefixes": "@variables('IPs')",
                                                        "sourcePortRange": "*"
                                                    }
                                                },
                                                "method": "PUT",
                                                "uri": "https://management.azure.com/@{variables('NSG')}/securityRules/BlockBruteForce-101?api-version=2020-05-01"
                                            }
                                        },
                                        "Parse_Azure_VM": {
                                            "runAfter": {
                                                "Get_Azure_VM": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ParseJson",
                                            "inputs": {
                                                "content": "@body('Get_Azure_VM')",
                                                "schema": {
                                                    "properties": {
                                                        "body": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "string"
                                                                },
                                                                "identity": {
                                                                    "properties": {
                                                                        "principalId": {
                                                                            "type": "string"
                                                                        },
                                                                        "tenantId": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "location": {
                                                                    "type": "string"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                },
                                                                "properties": {
                                                                    "properties": {
                                                                        "diagnosticsProfile": {
                                                                            "properties": {
                                                                                "bootDiagnostics": {
                                                                                    "properties": {
                                                                                        "enabled": {
                                                                                            "type": "boolean"
                                                                                        },
                                                                                        "storageUri": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "hardwareProfile": {
                                                                            "properties": {
                                                                                "vmSize": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "networkProfile": {
                                                                            "properties": {
                                                                                "networkInterfaces": {
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "id": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "required": [
                                                                                            "id"
                                                                                        ],
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "osProfile": {
                                                                            "properties": {
                                                                                "adminUsername": {
                                                                                    "type": "string"
                                                                                },
                                                                                "allowExtensionOperations": {
                                                                                    "type": "boolean"
                                                                                },
                                                                                "computerName": {
                                                                                    "type": "string"
                                                                                },
                                                                                "linuxConfiguration": {
                                                                                    "properties": {
                                                                                        "disablePasswordAuthentication": {
                                                                                            "type": "boolean"
                                                                                        },
                                                                                        "provisionVMAgent": {
                                                                                            "type": "boolean"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "secrets": {
                                                                                    "type": "array"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "provisioningState": {
                                                                            "type": "string"
                                                                        },
                                                                        "storageProfile": {
                                                                            "properties": {
                                                                                "dataDisks": {
                                                                                    "type": "array"
                                                                                },
                                                                                "imageReference": {
                                                                                    "properties": {
                                                                                        "exactVersion": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "offer": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "publisher": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "sku": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "version": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "osDisk": {
                                                                                    "properties": {
                                                                                        "caching": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "createOption": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "diskSizeGB": {
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "managedDisk": {
                                                                                            "properties": {
                                                                                                "id": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "storageAccountType": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "name": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "osType": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "vmId": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "resources": {
                                                                    "items": {
                                                                        "properties": {
                                                                            "id": {
                                                                                "type": "string"
                                                                            },
                                                                            "location": {
                                                                                "type": "string"
                                                                            },
                                                                            "name": {
                                                                                "type": "string"
                                                                            },
                                                                            "properties": {
                                                                                "properties": {
                                                                                    "autoUpgradeMinorVersion": {
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "provisioningState": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "publisher": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "settings": {
                                                                                        "properties": {},
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "typeHandlerVersion": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "type": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "name",
                                                                            "id",
                                                                            "type",
                                                                            "location",
                                                                            "properties"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "tags": {
                                                                    "properties": {},
                                                                    "type": "object"
                                                                },
                                                                "type": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "headers": {
                                                            "properties": {
                                                                "Cache-Control": {
                                                                    "type": "string"
                                                                },
                                                                "Content-Length": {
                                                                    "type": "string"
                                                                },
                                                                "Content-Type": {
                                                                    "type": "string"
                                                                },
                                                                "Date": {
                                                                    "type": "string"
                                                                },
                                                                "Expires": {
                                                                    "type": "string"
                                                                },
                                                                "Pragma": {
                                                                    "type": "string"
                                                                },
                                                                "Server": {
                                                                    "type": "string"
                                                                },
                                                                "Strict-Transport-Security": {
                                                                    "type": "string"
                                                                },
                                                                "Transfer-Encoding": {
                                                                    "type": "string"
                                                                },
                                                                "Vary": {
                                                                    "type": "string"
                                                                },
                                                                "X-Content-Type-Options": {
                                                                    "type": "string"
                                                                },
                                                                "x-ms-correlation-request-id": {
                                                                    "type": "string"
                                                                },
                                                                "x-ms-ratelimit-remaining-resource": {
                                                                    "type": "string"
                                                                },
                                                                "x-ms-ratelimit-remaining-subscription-reads": {
                                                                    "type": "string"
                                                                },
                                                                "x-ms-request-id": {
                                                                    "type": "string"
                                                                },
                                                                "x-ms-routing-request-id": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "statusCode": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "Set_NSG_ID": {
                                            "runAfter": {
                                                "Get_VM_NIC": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "NSG",
                                                "value": "@{body('Get_VM_NIC')?['properties']?['networkSecurityGroup']?['id']}"
                                            }
                                        },
                                        "Set_variable": {
                                            "runAfter": {
                                                "Parse_Azure_VM": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "NIC",
                                                "value": "@{body('Get_Azure_VM')?['properties']?['networkProfile']?['networkInterfaces']?[0]?['id']}"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Parse_an_entity": [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "contains": [
                                                    "@items('For_each_entity')",
                                                    "ResourceId"
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Parse_an_entity": {
                                    "runAfter": {},
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@items('For_each_entity')",
                                        "schema": {
                                            "properties": {
                                                "$id": {
                                                    "type": "string"
                                                },
                                                "Address": {
                                                    "type": "string"
                                                },
                                                "AzureID": {
                                                    "type": "string"
                                                },
                                                "HostName": {
                                                    "type": "string"
                                                },
                                                "ResourceId": {
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Parse_JSON": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Initialize_NIC_variable": {
                            "runAfter": {
                                "Alert_-_Get_incident": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "NIC",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_NSG_variable": {
                            "runAfter": {
                                "Initialize_NIC_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "NSG",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable": {
                            "runAfter": {
                                "Entities_-_Get_IPs": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "IPs",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Parse_JSON": {
                            "runAfter": {
                                "Entities_-_Get_Hosts": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@triggerBody()?['Entities']",
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "$id": {
                                                "type": "string"
                                            },
                                            "Address": {
                                                "type": "string"
                                            },
                                            "AzureID": {
                                                "type": "string"
                                            },
                                            "HostName": {
                                                "type": "string"
                                            },
                                            "Type": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "$id",
                                            "Type"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    }
                }
            }
        }
    ],
    "outputs": {
        "logicAppTriggerUrl": {
           "type": "string",
           "value": "[listCallbackURL(concat(resourceId('Microsoft.Logic/workflows', parameters('p_workflow_name')), '/triggers/When_a_response_to_an_Azure_Sentinel_alert_is_triggered'), '2017-07-01').value]"

        },
        "logicAppResourceId": {
            "type": "string",
            "value": "[resourceId('Microsoft.Logic/workflows', parameters('p_workflow_name'))]"
        }
     }
}